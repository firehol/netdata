---
# Handles building of binary packages for the agent.
name: Packages
on:
  # Trigger on pushes to master.
  push:
    branches:
      - master
  # Also trigger on pull requests
  # Used to verify package builds
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Build Packages / AMD64
    runs-on: ubuntu-latest
    env:
      # This is the CPU Architecture for the build.
      ARCH: amd64
    strategy:
      matrix:
        platform:
          - debian8
          - debian9
          - debian10
          - ubuntu16.04
          - ubuntu18.04
          - ubuntu19.10
          - fedora30
          - fedora31
          - centos7
          - opensuse15.1
        include:
          - platform: debian8
            distro: debian
            version: 8
            pkgclouddistro: Debian
            pkgcloudversion: 8.0
            format: deb
            base_image: debian
          - platform: debian9
            distro: debian
            version: 9
            pkgclouddistro: Debian
            pkgcloudversion: 9.0
            format: deb
            base_image: debian
          - platform: debian10
            distro: debian
            version: 10
            pkgclouddistro: Debian
            pkgcloudversion: 10.0
            format: deb
            base_image: debian
          - platform: ubuntu16.04
            distro: ubuntu
            version: 16.04
            pkgclouddistro: Ubuntu
            pkgcloudversion: 16.04
            format: deb
            base_image: ubuntu
          - platform: ubuntu18.04
            distro: ubuntu
            version: 18.04
            pkgclouddistro: Ubuntu
            pkgcloudversion: 18.04
            format: deb
            base_image: ubuntu
          - platform: ubuntu19.10
            distro: ubuntu
            version: 19.10
            pkgclouddistro: Ubuntu
            pkgcloudversion: 19.10
            format: deb
            base_image: ubuntu
          - platform: fedora30
            distro: fedora
            version: 30
            pkgclouddistro: Fedora
            pkgcloudversion: 30.0
            format: rpm
            base_image: fedora
          - platform: fedora31
            distro: fedora
            version: 31
            pkgclouddistro: Fedora
            pkgcloudversion: 31.0
            format: rpm
            base_image: fedora
          - platform: centos7
            distro: centos
            version: 7
            pkgclouddistro: Enterprise Linux
            pkgcloudversion: 7.0
            format: rpm
            base_image: centos
          - platform: opensuse15.1
            distro: opensuse
            version: 15.1
            pkgclouddistro: Fedora
            pkgcloudversion: 15.1
            format: rpm
            base_image: opensuse/leap
      # We intentiaonally disable the fail-fast behavior so that a
      # build failure for one version doesn't prevent us from publishing
      # successfully built and tested packages for another version.
      fail-fast: false
    steps:
      - name: Check Commit Message
        id: check-commit
        uses: ./.github/commit-filter-action
        with:
          regex: |
            ^\[Package ${{ env.ARCH }} ${{ matrix.format }}( ${{ matrix.distro }})?\]
          case-insensitive: true
      - name: Checkout
        uses: actions/checkout@v1
        if: steps.check-commit.outputs.matched == true || github.event_name == 'pull_request'
        with:
          fetch-depth: 0 # We need full history for versioning
      - name: Prepare Docker Images
        if: steps.check-commit.outputs.matched == true || github.event_name == 'pull_request'
        shell: bash
        run: |
          docker pull ${{ matrix.base_image }}:${{ matrix.version }}
          if [ "${{ matrix.base_image }}" != "${{ matrix.distro }}" ] ; then
            docker tag ${{ matrix.base_image }}:${{ matrix.version }} ${{ matrix.distro }}:${{ matrix.version }}
          fi
      - name: Build
        if: steps.check-commit.outputs.matched == true || github.event_name == 'pull_request'
        shell: bash
        run: |
          # Figure out the package version.
          PKG_VERSION="$(cut -d '-' -f 1 packaging/version)"
          last_commit="$(git log -1 --pretty=format:"%s")"
          if echo "${last_commit}" | grep -qiE "\[build latest\]" ; then
            PKG_VERSION="$(cut -d '-' -f 1 packaging/version | sed -e 's/-/./g').latest"
          fi
          # Actually build the package.
          docker build . \
              -f packaging/Dockerfile.packaging \
              --build-arg DISTRO=${{ matrix.distro }} \
              --build-arg DISTRO_VERSION=${{ matrix.version }} \
              --build-arg VERSION=$PKG_VERSION \
              -t local/package-builder:${{ matrix.distro }}${{ matrix.version }}
          mkdir -p artifacts
          docker run -it -v $PWD/artifacts:/artifacts local/package-builder:${DISTRO}${{ matrix.version }}
      - name: Upload
        if: steps.check-commit.outputs.matched == true && github.event_name != 'pull_request'
        shell: bash
        run: |
          # This figures out the distribution ID for the upload.
          DIST_ID="$(curl https://${{ secrets.PACKAGE_CLOUD_API_TOKEN }}:@packagecloud.io/api/v1/distributions.json | python3 .github/parse_packagecloud_dist_id.py ${{ matrix.format }} ${{ matrix.pkgclouddistro }} ${{ matrix.pkgcloudversion }})"
          last_commit="$(git log -1 --pretty=format:"%s")"
          REPO="${{ secrets.PACKAGE_CLOUD_REPO }}"
          if echo "${last_commit}" | grep -qiE "\[build latest\]" ; then
            REPO="${REPO}-edge"
          fi
          for pkgfile in artifacts/*.${FORMAT} ; do
            curl -F "package[distro_version_id]=${BUILD_ID}" \
                 -F "package[package_file]=@${pkgfile}" \
                 https://${{ secrets.PACKAGE_CLOUD_API_TOKEN }}:@packagecloud.io/api/v1/repos/${{ secrets.PACKAGE_CLOUD_REPO }}/packages.json || exit 1
