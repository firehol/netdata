---
name: Checks
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  checksum-checks:
    name: Checksums
    runs-on: ubuntu-latest
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Run checksum checks on kickstart files
        env:
          LOCAL_ONLY: "true"
        run: |
          ./tests/installer/checksums.sh
  dashboard-checks:
    name: Dashboard
    runs-on: ubuntu-latest
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install required packages
        run: |
          ./packaging/installer/install-required-packages.sh --dont-wait --non-interactive netdata
      - name: Backup dashboard.js
        run: |
          cp web/gui/dashboard.js /tmp/dashboard.js
      - name: Regenerate dashboard.js
        run: |
          autoreconf -ivf
          ./configure --enable-maintainer-mode
          make dist
      - name: Compare generated Dashboard vs. Backed up Dashboard
        run: |
          diff -sNrdu /tmp/dashboard.js web/gui/dashboard.js
  libressl-checks:
    name: LibreSSL
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build
        run: >
          docker run -v "$PWD":/netdata -w /netdata alpine:latest /bin/sh -c
          'apk add bash;
          ./packaging/installer/install-required-packages.sh --dont-wait --non-interactive netdata;
          apk del openssl openssl-dev;
          apk add libressl libressl-dev;
          autoreconf -ivf;
          ./configure;
          make;'
  clang-checks:
    name: Clang
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: |
          docker build -f .github/dockerfiles/Dockerfile.clang .
  gitignore-check:
    name: .gitignore
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Prepare environment
        run: ./packaging/installer/install-required-packages.sh --dont-wait --non-interactive netdata
      - name: Build netdata
        run: ./netdata-installer.sh --dont-start-it --disable-telemetry --dont-wait --install /tmp/install
      - name: Check that repo is clean
        run: if [ "$(git status --porcelain=v1 | wc -l)" -gt 0 ] ; then exit 1 ; fi
